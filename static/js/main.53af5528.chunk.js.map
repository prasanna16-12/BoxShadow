{"version":3,"sources":["componant/DisplayStyle.js","componant/Code.js","App.js","index.js"],"names":["DisplayStyle","props","offsetX","offsetY","blur","spread","color","set","console","log","style","className","Code","code","Fragment","position","class","onClick","navigator","clipboard","writeText","App","useState","setOffsetX","setOffsetY","setBlur","setSpread","setColor","inOutSet","setInOutSet","htmlFor","type","id","name","defaultChecked","min","max","step","defaultValue","onChange","e","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53af5528.chunk.js","sourcesContent":["import React from 'react'\nimport '../styles/DisplayStyle.css'\nconst DisplayStyle = (props) => {\n\n    // console.log(props);\n\n    const { offsetX, offsetY, blur, spread, color, set } = props;\n\n    console.log(offsetX, offsetY, blur, spread, color, set);\n\n    const style = {\n        \"boxShadow\": set + offsetX + \"px \" + offsetY + \"px \" + blur + \"px \" + spread + \"px \" + color\n    }\n\n    return (\n        <div className='preview-container' style={style}>\n\n        </div>\n    )\n}\n\nexport default DisplayStyle\n","import React from 'react'\nimport \"../styles/Code.css\";\nfunction Code(props) {\n\n    const { offsetX, offsetY, blur, spread, color, set } = props;\n\n    const code = `box-shadow:${set} ${offsetX}px ${offsetY}px ${blur}px ${spread}px ${color};`;\n\n    return (\n        <React.Fragment>\n            <div style={{position:\"relative\"}}>\n                <div className=\"code-container\">\n                    <pre>{code}</pre>\n                </div>\n                <i class=\"fas fa-clipboard\" onClick={()=>{\n                    navigator.clipboard.writeText(code);\n                    \n                }}></i>\n            </div>\n\n        </React.Fragment>\n    )\n}\n\nexport default Code;\n","import React from 'react';\nimport { useState, useEffect } from 'react'\nimport './App.css';\nimport DisplayStyle from './componant/DisplayStyle';\nimport Code from './componant/Code';\n\nfunction App() {\n\n\n  const [offsetX, setOffsetX] = useState(0);\n  const [offsetY, setOffsetY] = useState(0);\n  const [blur, setBlur] = useState(0);\n  const [spread, setSpread] = useState(0);\n  const [color, setColor] = useState(\"#000000\");\n  const [inOutSet, setInOutSet] = useState(\"\");\n\n\n\n\n  return (\n    <React.Fragment>\n\n      <div className='container'>\n\n        {/* sliders for input */}\n        <div className='slider-container'>\n          <div>\n            <label htmlFor=\"rdo1\">\n              <input type=\"radio\" id=\"rdo1\" name=\"radio\" onClick={() => {\n                setInOutSet(\"\");\n              }} defaultChecked />\n              <span className=\"rdo\"></span>\n              <span>Outset</span>\n            </label>\n\n            <label htmlFor=\"rdo2\">\n              <input type=\"radio\" id=\"rdo2\" name=\"radio\" onClick={() => {\n                setInOutSet(\"inset \");\n              }} />\n              <span className=\"rdo\"></span>\n              <span>Inset</span>\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"X-direction\">Offset X</label>\n            <input type=\"range\" name=\"X-direction\" id=\"X-direction\" min=\"-20\" max=\"20\" step=\"1\" defaultValue=\"0\" onChange={(e) => {\n              setOffsetX(e.target.value);\n            }}></input>\n          </div>\n          <div>\n            <label htmlFor=\"Y-direction\">Offset Y</label>\n            <input type=\"range\" name=\"Y-direction\" id=\"Y-direction\" min=\"-20\" max=\"20\" step=\"1\" defaultValue=\"0\" onChange={(e) => {\n              setOffsetY(e.target.value);\n            }}></input>\n          </div>\n          <div>\n            <label htmlFor=\"blur\">Blur</label>\n            <input type=\"range\" name=\"blur\" id=\"blur\" min=\"0\" max=\"20\" step=\"1\" defaultValue=\"0\" onChange={(e) => {\n              setBlur(e.target.value);\n            }}></input>\n          </div>\n          <div>\n            <label htmlFor=\"spread\">Spread</label>\n            <input type=\"range\" name=\"spread\" id=\"spread\" min=\"0\" max=\"20\" step=\"1\" defaultValue=\"0\" onChange={(e) => {\n              setSpread(e.target.value);\n            }}></input>\n          </div>\n          <div>\n            <label htmlFor=\"colorpicker\">Color Picker</label>\n            <input type=\"color\" name=\"colorpicker\" id=\"colorpicker\" onChange={(e) => {\n              setColor(e.target.value);\n            }}></input>\n          </div>\n        </div>\n\n        {/* display styles */}\n        <DisplayStyle\n          color={color}\n          offsetX={offsetX}\n          offsetY={offsetY}\n          blur={blur}\n          spread={spread}\n          set={inOutSet}\n        >\n        </DisplayStyle>\n\n        {/* display code */}\n        <Code\n          color={color}\n          offsetX={offsetX}\n          offsetY={offsetY}\n          blur={blur}\n          spread={spread}\n          set={inOutSet}\n        >\n        </Code>\n      </div>\n\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}